import{_ as e,c as a,o as i,a1 as t}from"./chunks/framework.C46D9NsM.js";const f=JSON.parse('{"title":"What is Simple RPC?","description":"","frontmatter":{},"headers":[],"relativePath":"what-is-simple-rpc.md","filePath":"what-is-simple-rpc.md"}'),s={name:"what-is-simple-rpc.md"},o=t('<h1 id="what-is-simple-rpc" tabindex="-1">What is Simple RPC? <a class="header-anchor" href="#what-is-simple-rpc" aria-label="Permalink to &quot;What is Simple RPC?&quot;">​</a></h1><p>The Simple RPC is a Node.js framework which simplifies the process of creating web servers and minimizes the communication efforts. With Simple RPC, you can invoke server-side functions from your client as if they were local, eliminating the need for RESTful APIs.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Just want to try it out? Skip to the <a href="./quick-start.html">Quick Start</a>.</p></div><h2 id="features-and-highlights" tabindex="-1">Features and Highlights <a class="header-anchor" href="#features-and-highlights" aria-label="Permalink to &quot;Features and Highlights&quot;">​</a></h2><ul><li>With async/await, the RPC framework is very easy to use.</li><li>The serialization algorithm allows you to pass data of common types that JSON.stringify cannot handle, such as undefined, Date, RegExp, Infinity, Set, Map, and more.</li><li>The serialization algorithm allows you to pass data with critical properties.</li><li>The RPC framework allows you to upload or download files.</li><li>The RPC framework allows you to add authorization, end, or error handling middleware.</li><li>The RPC framework allows you to add static pages and handle CORS.</li><li>The RPC framework is implemented in JavaScript and is quite lightweight, not relying on any third-party libraries.</li></ul>',5),r=[o];function l(n,h,c,d,p,m){return i(),a("div",null,r)}const _=e(s,[["render",l]]);export{f as __pageData,_ as default};
